function [ vertices,A ] = ChangeMaze( )

A =  [-1	-1	0	0	-1	0	0	0	0	0	-1	-1	-1	0	0	-1	0	-1	-1	-1
        0	0	-1	0	-1	-1	-1	0	0	-1	0	0	-1	-1	0	-1	0	0	0	0
        -1	0	0	0	-1	0	-1	-1	0	0	0	0	0	-1	0	0	-1	-1	-1	0
        0	0	0	0	-1	0	-1	-1	0	0	0	0	-1	-1	0	-1	-1	0	0	-1
        0	0	0	-1	0	0	0	-1	-1	0	-1	0	-1	-1	0	-1	0	-1	0	0
        0	-1	-1	-1	-1	-1	0	-1	-1	-1	-1	0	-1	0	0	-1	0	-1	0	-1
        0	-1	-1	-1	-1	-1	0	0	0	0	0	0	-1	-1	-1	0	0	-1	0	0
        0	0	0	0	0	0	0	-1	-1	-1	-1	0	0	0	0	0	0	0	0	-1
        0	0	-1	-1	-1	-1	0	0	0	0	-1	-1	-1	0	-1	-1	-1	-1	0	-1
        -1	0	0	-1	-1	-1	-1	0	0	0	0	-1	-1	0	-1	0	0	-1	0	0
        -1	0	-1	-1	0	0	0	0	0	0	-1	-1	0	0	0	0	-1	-1	0	0
        0	0	0	-1	0	0	0	0	0	0	0	0	0	0	0	-1	0	-1	0	-1
        -1	0	0	0	0	-1	0	-1	0	0	-1	0	0	0	0	-1	0	0	0	0
        0	0	0	0	-1	-1	0	-1	0	-1	0	0	0	0	0	-1	0	0	-1	0
        -1	0	0	-1	0	-1	0	-1	-1	0	0	0	0	-1	-1	0	-1	0	-1	0];

% idx1 = sub2ind([Nr,Nc],8,13);
% idx2 = sub2ind([Nr,Nc],9,14);
% 
% A(8,13) = -1;
% A(9,14) = -1;

Nr = 15;
Nc = 20;

idx1 = sub2ind([Nr,Nc],8,13);
A(8,13) = -1;
idx2 = sub2ind([Nr,Nc],9,14);
A(9,14) = -1;
% idx3 = sub2ind([Nr,Nc],12,11);
% A(12,11) = -1;
% idx4 = sub2ind([Nr,Nc],14,11);
% A(14,11) = -1;
% idx5 = sub2ind([Nr,Nc],15,11);
% A(15,11) = -1;

A(A == 0) = 1; % One means free    
A(A == -1) = 0; % Zero means wall

vertices = [maze8_neighbors(idx1,A) idx1 maze8_neighbors(idx2,A) idx2];

% A = ones(Nr,Nc);
% A(11,7) = 0;
% idx1 = sub2ind([Nr,Nc],11,7);
% vertices = [Succ(idx1) idx1];

% v1 = Succ(idx1);
% v2 = Succ(idx2);
% vertices = [v1 v2];
% vertices = [idx1 Succ(idx1) idx2 Succ(idx2)];
% vertices = [Succ(idx1) idx1];

% A = [1, 0, 1, 1, 1;
%      1, 0, 0, 1, 1;
%      1, 0, 1, 0, 1;
%      1, 0, 0, 0, 1;
%      1, 1, 1, 0, 1];
% vertices = [6 Succ(6) 20 Succ(20)];

% A(2,5) = 0;
% vertices = [30 Succ(30)];

% A = [1, 1, 1, 1;
%      0, 1, 0, 1;
%      0, 1, 0, 1;
%      0, 0, 0, 1;
%      0, 1, 0, 1;
%      1, 1, 1, 1];
%  Nr = 6;
%  Nc = 4;
%  vertices = [10 maze8_neighbors(10,Nr,Nc,A)];


end

